<snippet>
    <content><![CDATA[
struct Manacher{
      vector<int> p;
      string t;
      Manacher(const string& s) {
            for(char c : s) t += string("#") + c; t += "#";
            int n = (int) t.length(), c = 0, r = 0;
            p.resize(n);
            for(int i = 0; i < n; i++){
                  int mirr = c + c - i;
                  if(i < r) p[i] = min(p[mirr], r - i + 1);
                  while(i + p[i] < n && i - p[i] >= 0 && t[i+p[i]] == t[i-p[i]]) p[i]++;
                  if(i + p[i] - 1 > r) c = i, r = i + p[i] - 1; 
            }
            for(int i = 0; i < n; i++) p[i]--;
      }    
      int maxEven(int i) { return p[2*i + 2]; }
      int maxOdd(int i) { return p[2*i+1]; }
      bool pal(int l, int r){
            int c = (l + r) / 2, len = r - l + 1;
            if(len % 2) return maxOdd(c) >= len;
            else return maxEven(c) >= len;
      }
};
]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>manacher</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <!-- <scope>source.python</scope> -->
</snippet>

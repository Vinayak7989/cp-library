<snippet>
	<content><![CDATA[
#include "bits/stdc++.h"
using namespace std;
#define int               long long
#define pb                push_back
#define ppb               pop_back
#define all(x)            (x).begin(),(x).end()
#define uniq(v)           (v).erase(unique(all(v)),(v).end())
#define sz(x)             (int)((x).size())
#define f                 first
#define s                 second
#define pii               pair<int,int>
#define rep(i,a,b)        for(int i = a; i < b; i++)
#define repd(i,a,b)       for(int i = a; i >= b; i--)
#define mem1(a)           memset(a, -1, sizeof(a))
#define ppc               __builtin_popcount
#define ppcll             __builtin_popcountll
#define ll                long long
#define ld                long double

template<typename T,typename U>istream& operator>>(istream& in,pair<T,U> &a){in>>a.f>>a.s;return in;}
template<typename T,typename U>ostream& operator<<(ostream& out,pair<T,U> a){out<<'('<<a.f<<", "<<a.s<<')';return out;}
template<typename T>ostream& operator<<(ostream&cout,vector<T>const&v){cout<<"[";rep(i,0,sz(v)){if(i)cout<<", ";cout<<v[i];}return cout<<"]";}
template<typename T, typename U> static inline void amin(T &x, U y){ if(y<x) x=y; }
template<typename T, typename U> static inline void amax(T &x, U y){ if(x<y) x=y; }

#ifndef ONLINE_JUDGE
#define dbg(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1) {
      cout << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args) {
      const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1 << " | "; __f(comma + 1, args...);
}
#else
#define dbg(...)
#endif

const ld pi = 3.14159265358979323846;
const char nl = '\n';
const long long INF=1e18;
const int32_t M=1e9+7;
const int32_t MM=998244353;

const int N=1e6+5;      
ll n, m, q, k, l, r, x, y, z, a[N], b[N], c[N];
string s,t;



void KSBR(){
      $2
} 
signed main(){
      ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
      #ifdef SIEVE
            sieve();
      #endif
      #ifdef NCR
            init();
      #endif
      int t=1;
      //cin>>t;$1
      while(t--) KSBR();
}                            
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>template</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
